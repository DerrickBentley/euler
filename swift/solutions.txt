//  Write some awesome Swift code, or import libraries like "Foundation",
//  "Dispatch", or "Glibc"


//If we list all the natural numbers below 10 that are multiples of 3 or 5, we get 3, 5, 6 and 9. The sum of these multiples is 23.
//Find the sum of all the multiples of 3 or 5 below 1000.

var count:Int = 0

func threeOrFive(Number x:Int) -> Int {
	if x%3 == 0 || x%5 == 0 {
		return x
	}
	return 0
}

for i in 0..<1000 {
	count += threeOrFive(Number:i)
}

print(count)


//Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:

//1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

//By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.


func getFib(term:Int) -> Int {
	if(term <= -1){
		return 0
	}
	if(term <= 1){
		return 1
	}
	return getFib(term:term-1) + getFib(term:term-2)
}

print("heres my result \(getFib(term:1))")
print("heres my result \(getFib(term:2))")
print("heres my result \(getFib(term:3))")
print("heres my result \(getFib(term:4))")
print("heres my result \(getFib(term:5))")
print("heres my result \(getFib(term:6))")
print("heres my result \(getFib(term:7))")
print("heres my result \(getFib(term:8))")
print("heres my result \(getFib(term:9))")
print("heres my result \(getFib(term:10))")